
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AnswersScalarFieldEnum = {
  id: 'id',
  content: 'content',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at',
  is_accepted: 'is_accepted',
  userId: 'userId',
  qnaId: 'qnaId'
};

exports.Prisma.CommentsScalarFieldEnum = {
  id: 'id',
  content: 'content',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at',
  userId: 'userId',
  postId: 'postId'
};

exports.Prisma.HealthsScalarFieldEnum = {
  id: 'id',
  health_name: 'health_name'
};

exports.Prisma.InventoriesScalarFieldEnum = {
  id: 'id',
  quantity: 'quantity',
  itemSeq: 'itemSeq',
  hpid: 'hpid'
};

exports.Prisma.Medi_timesScalarFieldEnum = {
  id: 'id',
  medi_time: 'medi_time',
  userMediId: 'userMediId'
};

exports.Prisma.MedicinesScalarFieldEnum = {
  item_seq: 'item_seq',
  item_name: 'item_name',
  entp_name: 'entp_name',
  item_permit_date: 'item_permit_date',
  etc_otc_code: 'etc_otc_code',
  class_no: 'class_no',
  chart: 'chart',
  bar_code: 'bar_code',
  material_name: 'material_name',
  ee_doc_id: 'ee_doc_id'
};

exports.Prisma.PharmaciesScalarFieldEnum = {
  hpid: 'hpid',
  duty_addr: 'duty_addr',
  duty_mapimg: 'duty_mapimg',
  duty_name: 'duty_name',
  duty_tel1: 'duty_tel1',
  duty_time1c: 'duty_time1c',
  duty_time1s: 'duty_time1s',
  duty_time2c: 'duty_time2c',
  duty_time2s: 'duty_time2s',
  duty_time3c: 'duty_time3c',
  duty_time3s: 'duty_time3s',
  duty_time4c: 'duty_time4c',
  duty_time4s: 'duty_time4s',
  duty_time5c: 'duty_time5c',
  duty_time5s: 'duty_time5s',
  duty_time6c: 'duty_time6c',
  duty_time6s: 'duty_time6s',
  duty_time7c: 'duty_time7c',
  duty_time7s: 'duty_time7s',
  post_cdn1: 'post_cdn1',
  post_cdn2: 'post_cdn2',
  wgs84_lat: 'wgs84_lat',
  wgs84_lon: 'wgs84_lon'
};

exports.Prisma.Post_tagsScalarFieldEnum = {
  id: 'id',
  tagId: 'tagId',
  postId: 'postId'
};

exports.Prisma.PostsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at',
  userId: 'userId'
};

exports.Prisma.Qna_tagsScalarFieldEnum = {
  id: 'id',
  tagId: 'tagId',
  qnaId: 'qnaId'
};

exports.Prisma.QnasScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at',
  userId: 'userId'
};

exports.Prisma.TagsScalarFieldEnum = {
  id: 'id',
  tag_name: 'tag_name'
};

exports.Prisma.User_healthsScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  healthId: 'healthId'
};

exports.Prisma.User_medisScalarFieldEnum = {
  id: 'id',
  start_date: 'start_date',
  end_date: 'end_date',
  userId: 'userId',
  itemSeq: 'itemSeq'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  email: 'email',
  photo: 'photo',
  name: 'name',
  birthyear: 'birthyear',
  gender: 'gender',
  member_type: 'member_type',
  created_at: 'created_at',
  deleted_at: 'deleted_at',
  hpid: 'hpid'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  answers: 'answers',
  comments: 'comments',
  healths: 'healths',
  inventories: 'inventories',
  medi_times: 'medi_times',
  medicines: 'medicines',
  pharmacies: 'pharmacies',
  post_tags: 'post_tags',
  posts: 'posts',
  qna_tags: 'qna_tags',
  qnas: 'qnas',
  tags: 'tags',
  user_healths: 'user_healths',
  user_medis: 'user_medis',
  users: 'users'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
