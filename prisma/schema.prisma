generator client {
  provider = "prisma-client-js"
  output   = "prisma/generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model answers {
  id          Int       @id @default(autoincrement())
  content     String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @default(now())
  deleted_at  DateTime?
  is_accepted Boolean   @default(false)
  userId      String
  qnaId       Int
  qnas        qnas      @relation(fields: [qnaId], references: [id])
  users       users     @relation(fields: [userId], references: [id])
}

model comments {
  id         Int       @id @default(autoincrement())
  content    String
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now())
  deleted_at DateTime?
  userId     String
  postId     Int
  posts      posts     @relation(fields: [postId], references: [id])
  users      users     @relation(fields: [userId], references: [id])
}

model healths {
  id           Int            @id @default(autoincrement())
  health_name  String         @db.VarChar(100)
  user_healths user_healths[]
}

model inventories {
  id         Int        @id @default(autoincrement())
  quantity   Int
  itemSeq    String
  hpid       String
  pharmacies pharmacies @relation(fields: [hpid], references: [hpid])
  medicines  medicines  @relation(fields: [itemSeq], references: [item_seq])
}

model medi_times {
  id         Int        @id @default(autoincrement())
  medi_time  Int
  userMediId Int
  user_medis user_medis @relation(fields: [userMediId], references: [id])
}

model medicines {
  item_seq         String        @id
  item_name        String        @db.VarChar(255)
  entp_name        String?       @db.VarChar(255)
  item_permit_date DateTime?
  etc_otc_code     String?       @db.VarChar(50)
  class_no         String?       @db.VarChar(100)
  chart            String?
  bar_code         String?       @db.VarChar(50)
  material_name    String?
  ee_doc_id        String?       @db.VarChar(255)
  inventories      inventories[]
  user_medis       user_medis[]
}

model pharmacies {
  hpid        String        @id
  duty_addr   String?       @db.VarChar(255)
  duty_mapimg String?       @db.VarChar(255)
  duty_name   String        @db.VarChar(255)
  duty_tel1   String?       @db.VarChar(50)
  duty_time1c String?       @db.VarChar(10)
  duty_time1s String?       @db.VarChar(10)
  duty_time2c String?       @db.VarChar(10)
  duty_time2s String?       @db.VarChar(10)
  duty_time3c String?       @db.VarChar(10)
  duty_time3s String?       @db.VarChar(10)
  duty_time4c String?       @db.VarChar(10)
  duty_time4s String?       @db.VarChar(10)
  duty_time5c String?       @db.VarChar(10)
  duty_time5s String?       @db.VarChar(10)
  duty_time6c String?       @db.VarChar(10)
  duty_time6s String?       @db.VarChar(10)
  duty_time7c String?       @db.VarChar(10)
  duty_time7s String?       @db.VarChar(10)
  post_cdn1   String?       @db.VarChar(10)
  post_cdn2   String?       @db.VarChar(10)
  wgs84_lat   Decimal?      @db.Decimal(10, 7)
  wgs84_lon   Decimal?      @db.Decimal(10, 7)
  inventories inventories[]
  users       users[]
}

model post_tags {
  id     Int   @id @default(autoincrement())
  tagId  Int
  postId Int
  posts  posts @relation(fields: [postId], references: [id])
  tags   tags  @relation(fields: [tagId], references: [id])
}

model posts {
  id         Int         @id @default(autoincrement())
  title      String      @db.VarChar(255)
  content    String
  created_at DateTime    @default(now())
  updated_at DateTime    @default(now())
  deleted_at DateTime?
  userId     String
  comments   comments[]
  post_tags  post_tags[]
  users      users       @relation(fields: [userId], references: [id])
}

model qna_tags {
  id    Int  @id @default(autoincrement())
  tagId Int
  qnaId Int
  qnas  qnas @relation(fields: [qnaId], references: [id])
  tags  tags @relation(fields: [tagId], references: [id])
}

model qnas {
  id         Int        @id @default(autoincrement())
  title      String     @db.VarChar(255)
  content    String
  created_at DateTime   @default(now())
  updated_at DateTime   @default(now())
  deleted_at DateTime?
  userId     String
  answers    answers[]
  qna_tags   qna_tags[]
  users      users      @relation(fields: [userId], references: [id])
}

model tags {
  id        Int         @id @default(autoincrement())
  tag_name  String      @db.VarChar(100)
  post_tags post_tags[]
  qna_tags  qna_tags[]
}

model user_healths {
  id       Int     @id @default(autoincrement())
  userId   String
  healthId Int
  healths  healths @relation(fields: [healthId], references: [id])
  users    users   @relation(fields: [userId], references: [id])
}

model user_medis {
  id         Int          @id @default(autoincrement())
  start_date DateTime?
  end_date   DateTime?
  userId     String
  itemSeq    String
  medi_times medi_times[]
  medicines  medicines    @relation(fields: [itemSeq], references: [item_seq])
  users      users        @relation(fields: [userId], references: [id])
}

model users {
  id           String         @id
  email        String?        @db.VarChar(255)
  photo        String?        @db.VarChar(255)
  name         String?        @db.VarChar(100)
  birthyear    Int?
  gender       String?        @db.VarChar(10)
  member_type  Int
  created_at   DateTime       @default(now())
  deleted_at   DateTime?
  hpid         String?
  answers      answers[]
  comments     comments[]
  posts        posts[]
  qnas         qnas[]
  user_healths user_healths[]
  user_medis   user_medis[]
  pharmacies   pharmacies?    @relation(fields: [hpid], references: [hpid])
}
