generator client {
  provider = "prisma-client-js"
  output   = "../prisma/generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model answers {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @default(now()) @map("updated_at")
  deletedAt   DateTime? @map("deleted_at")
  isAccepted  Boolean   @default(false) @map("is_accepted")
  qnaId       Int       @map("qna_id")
  content     Json
  contentHTML String?   @map("content_html")
  userId      String    @map("user_id") @db.Uuid
  qnas        qnas      @relation(fields: [qnaId], references: [id])
  users       users     @relation(fields: [userId], references: [id])
}

model comments {
  id        Int       @id @default(autoincrement())
  content   String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  postId    Int       @map("post_id")
  userId    String    @map("user_id") @db.Uuid
  posts     posts     @relation(fields: [postId], references: [id])
  users     users     @relation(fields: [userId], references: [id])
}

model healths {
  id           Int            @id @default(autoincrement())
  health_name  String         @db.VarChar(100)
  user_healths user_healths[]
}

model inventories {
  id         Int        @id @default(autoincrement())
  quantity   Int
  itemSeq    String
  hpid       String
  pharmacies pharmacies @relation(fields: [hpid], references: [hpid])
  medicines  medicines  @relation(fields: [itemSeq], references: [item_seq])
}

model medi_times {
  id         Int        @id @default(autoincrement())
  medi_time  Int
  userMediId Int
  user_medis user_medis @relation(fields: [userMediId], references: [id])
}

model medicines {
  item_seq         String         @id
  item_name        String         @db.VarChar(255)
  entp_name        String?        @db.VarChar(255)
  item_permit_date DateTime?
  etc_otc_code     String?        @db.VarChar(50)
  class_no         String?        @db.VarChar(100)
  chart            String?
  bar_code         String?        @db.VarChar(50)
  material_name    String?
  ee_doc_id        String?        @db.VarChar(255)
  bizrno           String?        @db.VarChar(20)
  cancel_date      DateTime?
  cancel_name      String?        @db.VarChar(100)
  change_date      DateTime?
  created_at       DateTime       @default(now())
  edi_code         String?        @db.VarChar(50)
  insert_file      String?        @db.VarChar(255)
  nb_doc_id        String?        @db.VarChar(255)
  pack_unit        String?        @db.VarChar(255)
  reexam_date      DateTime?
  reexam_target    String?        @db.VarChar(255)
  storage_method   String?        @db.VarChar(255)
  type_code        String?        @db.VarChar(10)
  type_name        String?        @db.VarChar(100)
  ud_doc_id        String?        @db.VarChar(255)
  updated_at       DateTime       @updatedAt
  valid_term       String?        @db.VarChar(100)
  inventories      inventories[]
  medi_reviews     medi_reviews[]
  user_medis       user_medis[]

  @@index([item_name])
  @@index([entp_name])
}

model pharmacies {
  hpid        String        @id
  duty_addr   String?       @db.VarChar(255)
  duty_mapimg String?       @db.VarChar(255)
  duty_name   String        @db.VarChar(255)
  duty_tel1   String?       @db.VarChar(50)
  duty_time1c String?       @db.VarChar(10)
  duty_time1s String?       @db.VarChar(10)
  duty_time2c String?       @db.VarChar(10)
  duty_time2s String?       @db.VarChar(10)
  duty_time3c String?       @db.VarChar(10)
  duty_time3s String?       @db.VarChar(10)
  duty_time4c String?       @db.VarChar(10)
  duty_time4s String?       @db.VarChar(10)
  duty_time5c String?       @db.VarChar(10)
  duty_time5s String?       @db.VarChar(10)
  duty_time6c String?       @db.VarChar(10)
  duty_time6s String?       @db.VarChar(10)
  duty_time7c String?       @db.VarChar(10)
  duty_time7s String?       @db.VarChar(10)
  post_cdn1   String?       @db.VarChar(10)
  post_cdn2   String?       @db.VarChar(10)
  wgs84_lat   Decimal?      @db.Decimal(10, 7)
  wgs84_lon   Decimal?      @db.Decimal(10, 7)
  inventories inventories[]
  users       users[]
}

model posts_tags {
  id     Int   @id @default(autoincrement())
  tagId  Int   @map("tag_id")
  postId Int   @map("post_id")
  posts  posts @relation(fields: [postId], references: [id])
  tags   tags  @relation(fields: [tagId], references: [id])
}

model posts {
  id          Int          @id @default(autoincrement())
  title       String       @db.VarChar(255)
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @default(now()) @map("updated_at")
  deletedAt   DateTime?    @map("deleted_at")
  content     Json
  contentHTML String?      @map("content_html")
  userId      String       @map("user_id") @db.Uuid
  comments    comments[]
  users       users        @relation(fields: [userId], references: [id])
  postTags    posts_tags[]
}

model qna_tags {
  id    Int  @id @default(autoincrement())
  tagId Int  @map("tag_id")
  qnaId Int  @map("qna_id")
  qnas  qnas @relation(fields: [qnaId], references: [id], onDelete: Cascade)
  tags  tags @relation(fields: [tagId], references: [id], onDelete: Cascade)
}

model qnas {
  id          Int        @id @default(autoincrement())
  title       String     @db.VarChar(255)
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @default(now()) @map("updated_at")
  deletedAt   DateTime?  @map("deleted_at")
  content     Json
  contentHTML String?    @map("content_html")
  userId      String     @map("user_id") @db.Uuid
  answers     answers[]
  qnaTags     qna_tags[]
  users       users      @relation(fields: [userId], references: [id])
}

model tags {
  id       Int          @id @default(autoincrement())
  tagName  String       @db.VarChar(100)
  postTags posts_tags[]
  qnaTags  qna_tags[]
}

model user_healths {
  id       Int     @id @default(autoincrement())
  healthId Int
  userId   String  @db.Uuid
  healths  healths @relation(fields: [healthId], references: [id])
  users    users   @relation(fields: [userId], references: [id])
}

model user_medis {
  id         Int          @id @default(autoincrement())
  start_date DateTime?
  end_date   DateTime?
  itemSeq    String
  userId     String       @db.Uuid
  medi_times medi_times[]
  medicines  medicines    @relation(fields: [itemSeq], references: [item_seq])
  users      users        @relation(fields: [userId], references: [id])
}

model users {
  email        String?        @unique @db.VarChar(255)
  photo        String?        @db.VarChar(255)
  name         String?        @db.VarChar(100)
  birthyear    Int?
  gender       String?        @db.VarChar(10)
  member_type  Int            @default(0)
  created_at   DateTime       @default(now())
  deleted_at   DateTime?
  hpid         String?
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  answers      answers[]
  comments     comments[]
  medi_reviews medi_reviews[]
  posts        posts[]
  qnas         qnas[]
  user_healths user_healths[]
  user_medis   user_medis[]
  pharmacies   pharmacies?    @relation(fields: [hpid], references: [hpid])
}

model medi_reviews {
  id             Int          @id @default(autoincrement())
  medi_id        String
  review_type_id Int
  user_id        String       @db.Uuid
  medicines      medicines    @relation(fields: [medi_id], references: [item_seq])
  review_types   review_types @relation(fields: [review_type_id], references: [id])
  users          users        @relation(fields: [user_id], references: [id])

  @@unique([medi_id, review_type_id, user_id])
  @@index([medi_id])
  @@index([review_type_id])
  @@index([user_id])
}

model review_types {
  id           Int            @id @default(autoincrement())
  review_text  String?        @db.VarChar(100)
  emoji        String?        @db.VarChar(10)
  category     String?        @db.VarChar(50)
  is_active    Boolean?
  created_at   DateTime?
  medi_reviews medi_reviews[]
}
